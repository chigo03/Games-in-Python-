# Implementation of classic arcade game Pong

import simplegui
import random

# initialize globals - pos and vel encode vertical info for paddles
WIDTH = 600
HEIGHT = 400       
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
ball_pos = [WIDTH/2, HEIGHT/2]
ball_vel = [2,-3]
ball_vel[0] = random.randrange(2, 4)
ball_vel[1] = random.randrange(-3, -1)
paddle1_pos= HEIGHT/2 - HALF_PAD_HEIGHT
paddle2_pos =  HEIGHT/2 - HALF_PAD_HEIGHT
paddle1_vel, paddle2_vel = 0, 0
score1, score2 = 0, 0
# initialize ball_pos and ball_vel for new bal in middle of table
# if direction is RIGHT, the ball's velocity is upper right, else upper left
def spawn_ball(direction):
    global ball_pos, ball_vel # these are vectors stored as lists
    ball_pos = [WIDTH/2, HEIGHT/2]
    ball_vel = [2,-0.75]
    if direction == 'Left':
        ball_vel[0] *= (-1)
    elif direction == 'Right':
        ball_vel[0] = ball_vel[0]

# define event handlers
def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  # these are numbers
    global score1, score2  # these are ints
    paddle1_pos= HEIGHT/2 - HALF_PAD_HEIGHT
    paddle2_pos =  HEIGHT/2 - HALF_PAD_HEIGHT
    paddle1_vel, paddle2_vel = 0, 0
    score1, score2 = 0, 0
    spawn_ball('Left')
    
    
def draw(canvas):
    global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel, paddle1_vel, paddle2_vel
 
        
    # draw mid line and gutters
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")
        
    # update ball
    ball_pos[0] += ball_vel[0]
    ball_pos[1] += ball_vel[1]
    
    if (ball_pos[0] <= (BALL_RADIUS+PAD_WIDTH)):
        if (ball_pos[1] >= paddle1_pos) and (ball_pos[1] <= paddle1_pos + PAD_HEIGHT):
            ball_vel[0] += ball_vel[0]*0.1
            ball_vel[0] = -ball_vel[0]
        else: 
            spawn_ball('Right')
            score2 += 1
            
    elif ball_pos[0] >= WIDTH - (BALL_RADIUS + PAD_WIDTH):
        if (ball_pos[1] >= paddle2_pos) and (ball_pos[1] <= paddle2_pos + PAD_HEIGHT):
            ball_vel[0] += ball_vel[0]*0.1
            ball_vel[0] = -ball_vel[0]
        else: 
            spawn_ball('Left')
            score1 += 1 
    elif ball_pos[1] <= BALL_RADIUS:
        ball_vel[1] = -ball_vel[1]
    elif ball_pos[1] >= HEIGHT - BALL_RADIUS:
       ball_vel[1] = -ball_vel[1]
    # draw ball
    canvas.draw_circle(ball_pos ,BALL_RADIUS , 3, 'Red',  'White')
    # update paddle's vertical position, keep paddle on the screen
    paddle1_pos += paddle1_vel
    paddle2_pos += paddle2_vel
    if paddle1_pos >= HEIGHT - PAD_HEIGHT:
        paddle1_pos = HEIGHT - PAD_HEIGHT
    elif paddle1_pos <= 0:
        paddle1_pos = 0
    if paddle1_pos >= HEIGHT - PAD_HEIGHT:
        paddle1_pos = HEIGHT - PAD_HEIGHT
    elif paddle1_pos <= 0:
        paddle1_pos = 0
        
        
    if paddle2_pos >= HEIGHT - PAD_HEIGHT:
        paddle2_pos = HEIGHT - PAD_HEIGHT
    elif paddle2_pos <= 0:
        paddle2_pos = 0
    if paddle2_pos >= HEIGHT - PAD_HEIGHT:
        paddle2_pos = HEIGHT - PAD_HEIGHT
    elif paddle2_pos <= 0:
        paddle2_pos = 0    
    # draw paddles 
    canvas.draw_line([PAD_WIDTH/2, paddle1_pos],[PAD_WIDTH/2, paddle1_pos + PAD_HEIGHT],PAD_WIDTH , "Yellow")
    canvas.draw_line([WIDTH - PAD_WIDTH/2, paddle2_pos],[ WIDTH - PAD_WIDTH/2, paddle2_pos + PAD_HEIGHT],PAD_WIDTH , "Yellow")
    # draw scores
    canvas.draw_text(str(score1), (150, 70), 40, 'White')
    canvas.draw_text('Player 1', (150, 30), 20, 'White')
    canvas.draw_text(str(score2), (431, 70), 40, 'White')    
    canvas.draw_text('Player 2', (431, 30), 20, 'White')
def keydown(key):
    global paddle1_vel, paddle2_vel
    if key == simplegui.KEY_MAP["S"]:
        paddle1_vel = 3
    elif key == simplegui.KEY_MAP["down"]:
        paddle2_vel = 3
    elif (key==simplegui.KEY_MAP["W"]):
        paddle1_vel = -3
    elif (key==simplegui.KEY_MAP["up"]):
        paddle2_vel = -3
   
def keyup(key):
    global paddle1_vel, paddle2_vel
    if key == simplegui.KEY_MAP["S"]:
        paddle1_vel = 0
    elif key == simplegui.KEY_MAP["down"]:
        paddle2_vel = 0
    elif (key==simplegui.KEY_MAP["W"]):
        paddle1_vel = 0
    elif (key==simplegui.KEY_MAP["up"]):
        paddle2_vel = 0

def restart_handler():
    new_game()
# create frame
frame = simplegui.create_frame("Pong", WIDTH, HEIGHT)
frame.add_label('PONG')
frame.add_button('Restart', restart_handler)
frame.add_label('')
frame.add_label('Player 1:')
frame.add_label("Use 'W' and 'S' keys to move "
                "the paddle up and down.")
frame.add_label(' ')
frame.add_label('Player 2: ')
frame.add_label("Use 'UP' and 'DOWN' ARROWS to move "
                "the paddle up and down.")
frame.add_label('')
                
                
             

frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)


# start frame
new_game()
frame.start()
